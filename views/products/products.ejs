<%- include('../partials/dashboard') %>

    <!-- Products Management Section -->
    <div class="flex-1 mb-10 bg-white shadow-md p-6 rounded-md border border-gray-300 max-w-full">
        <h1 class="text-xl sm:text-2xl py-2 font-bold text-gray-800 border-b border-gray-300">
            Products Management
        </h1>

        <p class="mt-2 text-gray-600">Filter products by selecting a city or category.</p>

        <!-- City and Category Dropdowns -->
        <div class="flex flex-col sm:flex-row justify-between items-center gap-4 mt-4">
            <!-- City Dropdown -->
            <select id="cityFilter"
                class="w-full sm:w-1/3 px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-500 focus:outline-none">
                <option value="all">All Cities</option>
                <% cities.forEach(city=> { %>
                    <option value="<%= city.cityEnglish %>">
                        <%= city.cityEnglish %> / <%= city.cityUrdu %>
                    </option>
                    <% }) %>
            </select>

            <!-- Category Dropdown -->
            <select id="categoryFilter"
                class="w-full sm:w-1/3 px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-500 focus:outline-none">
                <option value="all">All Categories</option>
                <% categories.forEach(category=> { %>
                    <option value="<%= category.categoryEnglish %>">
                        <%= category.categoryEnglish %> / <%= category.categoryUrdu %>
                    </option>
                    <% }) %>
            </select>
        </div>

        <!-- Products Table -->
        <div class="overflow-x-auto mt-4">
            <div class="max-h-[300px] sm:max-h-[600px] overflow-y-auto border border-gray-300 rounded-md">
                <table class="w-full border-collapse border border-gray-300">
                    <thead class="bg-gray-100">
                        <tr class="text-xs sm:text-sm md:text-base">
                            <th class="border border-gray-300 px-8 sm:px-12 py-2 text-left">S.No</th>
                            <th class="border border-gray-300 px-8 sm:px-12 py-2 text-left">City</th>
                            <th class="border border-gray-300 px-8 sm:px-12 py-2 text-left">Category</th>
                            <th class="border border-gray-300 px-8 sm:px-12 py-2 text-left">Product</th>
                            <th class="border border-gray-300 px-8 sm:px-12 py-2 text-left">Price</th>
                            <th class="border border-gray-300 px-8 sm:px-12 py-2 text-left">New Price</th>
                            <th class="border border-gray-300 px-8 sm:px-12 py-2 text-left">Delete</th>
                        </tr>
                    </thead>
                    <tbody id="productsTable">
                        <% products.forEach((product, index)=> { %>
                            <tr class="product-row" data-city="<%= product.cityEnglish %>"
                                data-category="<%= product.categoryEnglish %>">
                                <td class="border border-gray-300 px-2 sm:px-4 py-2">
                                    <%= index + 1 %>
                                </td>
                                <td class="border border-gray-300 px-2 sm:px-4 py-2">
                                    <%= product.cityEnglish %> / <%= product.cityUrdu %>
                                </td>
                                <td class="border border-gray-300 px-2 sm:px-4 py-2">
                                    <%= product.categoryEnglish %> / <%= product.categoryUrdu %>
                                </td>
                                <td class="border border-gray-300 px-2 sm:px-4 py-2">
                                    <%= product.productEnglish %> / <%= product.productUrdu %>
                                </td>
                                <td class="border border-gray-300 px-2 sm:px-4 py-2">Rs. <%= product.price %>/kg</td>
                                <td class="border border-gray-300 px-2 sm:px-4 py-2">
                                    <div class="flex items-center space-x-2">
                                        <input class="new-price-input py-2 px-3 rounded outline-none w-24" type="text"
                                            placeholder="New Price" data-id="<%= product.id %>">
                                        <button
                                            class="update-price-btn bg-green-500 hover:bg-green-700 transition-all text-white px-3 py-1 rounded"
                                            data-id="<%= product.id %>">
                                            âœ…
                                        </button>
                                    </div>
                                </td>



                                <td class="border border-gray-300 px-2 sm:px-4 py-2">
                                    <button
                                        class="delete-btn bg-red-500 text-white text-xs sm:text-sm px-4 py-2 rounded-md hover:bg-red-600 transition"
                                        data-id="<%= product.id %>">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                            <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- JavaScript for Filtering & Deleting -->
    <script>
        document.getElementById("cityFilter").addEventListener("change", filterProducts);
        document.getElementById("categoryFilter").addEventListener("change", filterProducts);

        function filterProducts() {
            let selectedCity = document.getElementById("cityFilter").value;
            let selectedCategory = document.getElementById("categoryFilter").value;
            let rows = document.querySelectorAll(".product-row");

            rows.forEach(row => {
                let city = row.getAttribute("data-city");
                let category = row.getAttribute("data-category");

                let cityMatch = (selectedCity === "all" || city === selectedCity);
                let categoryMatch = (selectedCategory === "all" || category === selectedCategory);

                if (cityMatch && categoryMatch) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }


    </script>

    <script>
        document.addEventListener("click", async function (event) {
            if (event.target.classList.contains("delete-btn")) {
                let productId = event.target.getAttribute("data-id");

                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            let response = await fetch(`/products/delete/${productId}`, {
                                method: "POST",
                            });

                            let result = await response.json();

                            if (result.success) {
                                event.target.closest("tr").remove();
                                Swal.fire(
                                    "Deleted!",
                                    "The product has been deleted.",
                                    "success"
                                );
                            } else {
                                Swal.fire(
                                    "Error!",
                                    "Failed to delete the product.",
                                    "error"
                                );
                            }
                        } catch (error) {
                            console.error("Error deleting product:", error);
                            Swal.fire(
                                "Error!",
                                "Something went wrong. Try again later.",
                                "error"
                            );
                        }
                    }
                });
            }
        });
    </script>


    <script>
        document.addEventListener("click", async function (event) {
            if (event.target.classList.contains("update-price-btn")) {
                let productId = event.target.getAttribute("data-id");
                let inputField = document.querySelector(`input[data-id="${productId}"]`);
                let newPrice = inputField.value.trim();

                if (!newPrice || isNaN(newPrice)) {
                    Swal.fire("Error", "Please enter a valid price.", "error");
                    return;
                }

                try {
                    let response = await fetch(`/products/update-price/${productId}`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ price: newPrice })
                    });

                    let result = await response.json();

                    if (result.success) {
                        Swal.fire("Success", "Price updated successfully!", "success").then(() => {
                            location.reload(); // Refresh the page to show the new price
                        });
                    } else {
                        Swal.fire("Error", "Failed to update price.", "error");
                    }
                } catch (error) {
                    console.error("Error updating price:", error);
                    Swal.fire("Error", "Something went wrong.", "error");
                }
            }
        });
    </script>